// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerPortal.Migrations
{
    [DbContext(typeof(CustomerPortalContext))]
    partial class CustomerPortalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CustomerPortal.Models.Battery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BuildingType")
                        .HasColumnType("longtext");

                    b.Property<string>("Certificate")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CommissionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Information")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastInspectionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("buildingId")
                        .HasColumnType("int");

                    b.Property<int>("building_id")
                        .HasColumnType("int");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("buildingId");

                    b.ToTable("Battery");
                });

            modelBuilder.Entity("CustomerPortal.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdminEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("AdminName")
                        .HasColumnType("longtext");

                    b.Property<string>("AdminPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TechEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("TechName")
                        .HasColumnType("longtext");

                    b.Property<string>("TechPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("customerId")
                        .HasColumnType("int");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("customerId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("CustomerPortal.Models.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BuildingType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Information")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<int>("NumberFloorsServed")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("batteryId")
                        .HasColumnType("int");

                    b.Property<int>("battery_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("batteryId");

                    b.ToTable("Column");
                });

            modelBuilder.Entity("CustomerPortal.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactName")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TechAuthorityEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("TechAuthorityName")
                        .HasColumnType("longtext");

                    b.Property<string>("TechAuthorityPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CustomerPortal.Models.Elevator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BuildingType")
                        .HasColumnType("longtext");

                    b.Property<string>("Certificate")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CommissionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Information")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastInspectionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("columnId")
                        .HasColumnType("int");

                    b.Property<int>("column_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("columnId");

                    b.ToTable("Elevator");
                });

            modelBuilder.Entity("CustomerPortal.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CustomerPortal.Models.Battery", b =>
                {
                    b.HasOne("CustomerPortal.Models.Building", "building")
                        .WithMany("batteries")
                        .HasForeignKey("buildingId");

                    b.Navigation("building");
                });

            modelBuilder.Entity("CustomerPortal.Models.Building", b =>
                {
                    b.HasOne("CustomerPortal.Models.Customer", "customer")
                        .WithMany("buildings")
                        .HasForeignKey("customerId");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("CustomerPortal.Models.Column", b =>
                {
                    b.HasOne("CustomerPortal.Models.Battery", "battery")
                        .WithMany("column")
                        .HasForeignKey("batteryId");

                    b.Navigation("battery");
                });

            modelBuilder.Entity("CustomerPortal.Models.Elevator", b =>
                {
                    b.HasOne("CustomerPortal.Models.Column", "column")
                        .WithMany("elevators")
                        .HasForeignKey("columnId");

                    b.Navigation("column");
                });

            modelBuilder.Entity("CustomerPortal.Models.Battery", b =>
                {
                    b.Navigation("column");
                });

            modelBuilder.Entity("CustomerPortal.Models.Building", b =>
                {
                    b.Navigation("batteries");
                });

            modelBuilder.Entity("CustomerPortal.Models.Column", b =>
                {
                    b.Navigation("elevators");
                });

            modelBuilder.Entity("CustomerPortal.Models.Customer", b =>
                {
                    b.Navigation("buildings");
                });
#pragma warning restore 612, 618
        }
    }
}
